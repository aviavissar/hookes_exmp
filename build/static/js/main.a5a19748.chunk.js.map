{"version":3,"sources":["styles/global.style.js","view/Product.js","view/ProductList.js","state/Products.store.js","view/App.js","styles/colors.js","index.js"],"names":["GlobalStyles","createGlobalStyle","styled","div","li","ProductList","products","showQuantity","buttonTitle","buttonAction","List","Box","Store","createContext","Provider","App","context","useContext","Error","useStore","videos","setvideos","Page","Header","Content","StoreList","CartList","ReactDOM","render","children","useState","selectedVideo","setSelectedVideo","console","log","state","actions","value","document","getElementById"],"mappings":"k7EAKA,IAwGeA,EAxGMC,YAAH,K,wSC6BNC,IAAOC,IAAV,KAKED,IAAOE,GAAV,KAKUF,IAAOC,IAAT,KChBDE,MAtBf,YAQE,OARqE,EAAjDC,SAAiD,EAAxCC,aAAwC,EAA3BC,YAA2B,EAAfC,aASpD,kBAAC,EAAD,KACE,kBAACC,EAAD,KACE,gCAcFC,EAAMT,IAAOC,IAAV,sEAAGD,CAAH,8CAKHQ,EAAOR,IAAOC,IAAV,uEAAGD,CAAH,gE,eChCJU,EAAQC,0BACNC,EAAaF,EAAbE,SC8COC,EAxCH,WAAO,IAAD,EDJD,WACf,IAAMC,EAAUC,qBAAWL,GAC3B,IAAKI,EACH,MAAM,IAAIE,MAAJ,2CAER,OAAOF,ECAuBG,GADd,EACRC,OADQ,EACAC,UAehB,OACE,kBAACC,EAAD,KAEE,kBAACC,EAAD,MAMA,kBAACC,EAAD,KACE,kBAACC,EAAD,KACE,kBAAC,EAAD,OAEF,kBAACC,EAAD,KACE,kBAAC,EAAD,aAKJ,kBAAC,EAAD,QAOAJ,EAAOpB,IAAOC,IAAV,+DAAGD,CAAH,kFAQJqB,EAASrB,IAAOC,IAAV,iEAAGD,CAAH,2CAWNuB,GALYvB,IAAOC,IAAV,oEAAGD,CAAH,4BAKGA,IAAOC,IAAV,oEAAGD,CAAH,0CCxEK,YD6EdsB,EAAUtB,IAAOC,IAAV,kEAAGD,CAAH,kBAGPwB,EAAWxB,IAAOC,IAAV,mEAAGD,CAAH,yHC9EY,WDsFVA,IAAOC,IAAV,kEAAGD,CAAH,0CCtFa,WCK1ByB,IAASC,OAAQ,mBHSK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAEEC,mBAAS,MAFX,mBAEjCC,EAFiC,KAElBC,EAFkB,OAGZF,mBAAS,IAHG,mBAGjCV,EAHiC,KAGzBC,EAHyB,KAQtCY,QAAQC,IAAIH,GAOT,IAAMI,EAAQ,CACbJ,gBAAcX,UAGVgB,EAAU,CACdJ,mBACAX,aAGF,OAAO,kBAACP,EAAD,CAAUuB,MAAK,eAAOF,EAAP,GAAiBC,IAAYP,KGjCtC,KAAe,kBAAC,EAAD,OAAyBS,SAASC,eAAe,W","file":"static/js/main.a5a19748.chunk.js","sourcesContent":["\n\nimport { createGlobalStyle } from \"styled-components\";\n\n\nconst GlobalStyles = createGlobalStyle`\n    @import url(\"https://fonts.googleapis.com/css?family=Roboto:400,700\");\n    html, body, div, span, applet, object, iframe,\n    h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n    a, abbr, acronym, address, big, cite, code,\n    del, dfn, em, img, ins, kbd, q, s, samp,\n    small, strike, strong, sub, sup, tt, var,\n    b, u, i, center,\n    dl, dt, dd, ol, ul, li,\n    fieldset, form, label, legend,\n    table, caption, tbody, tfoot, thead, tr, th, td,\n    article, aside, canvas, details, embed, \n    figure, figcaption, footer, header, hgroup, \n    menu, nav, output, ruby, section, summary,\n    time, mark, audio, video {\n      margin: 0;\n      padding: 0;\n      border: 0;\n      font-size: 100%;\n      font: inherit;\n      vertical-align: baseline;\n    }\n    /* HTML5 display-role reset for older browsers */\n    article, aside, details, figcaption, figure, \n    footer, header, hgroup, menu, nav, section {\n      display: block;\n    }\n    * {\n      margin: 0;\n      padding: 0;\n      box-sizing: border-box;\n      \n    }\n    body {\n      line-height: 1;\n    }\n    ol, ul {\n      list-style: none;\n    }\n    blockquote, q {\n      quotes: none;\n    }\n    blockquote:before, blockquote:after,\n    q:before, q:after {\n      content: '';\n      content: none;\n    }\n\n   \n    \n    body {\n      font-size:1.6rem;\n     \n      background: linear-gradient(\n        to bottom,\n        #ebf2ff 0%,\n        #99c0ff 100%\n      ); \n      font-family: 'Roboto', sans-serif;\n      font-family:Circular,-apple-system,BlinkMacSystemFont,Roboto,Helvetica Neue,sans-ser;\n      /* border: blue solid 2px; */\n      min-height:120vh;\n    }\n   \n    ul {\n      list-style-type: none;\n    }\n    \ninput{\n  height: 40px;\n  min-width: 400px;\n  padding: 10px;\n  border-radius: 10px;\n  margin:3px;\n  border: none;\n}\ninput.category {\n  min-width:200px;\n}\n\nbutton{\n  height: 50px;\n  min-width: 200px;\n  padding: 10px;\n  border-radius: 10px;\n  margin:3px;\n  border: none;\n  background-color: gray;\n  color: white;\n  font-size: medium;\n}\n\na{\n  text-decoration: none;\n}\na:hover{\n  text-decoration: underline;\n}\n\nli:hover{\n  darken(GREY,15%);\n}\n`;\n\nexport default GlobalStyles;\n","import React from 'react';\nimport styled from \"styled-components\";\n\nconst CURRENCY='$'\nconst Product = ({ productObj, productOption }) => {\n\n  const { productID, productName, price, productImage } = productObj;\n  const { showQuantity, buttonTitle, buttonAction } = productOption;\n\n\n  return (\n    <Box>\n      <Li>\n        <ProductBox>\n          <h4>{productID}</h4>\n          <h2>{productName}</h2>\n          <h3>{price + CURRENCY}</h3>\n          <img src={productImage} />\n          <button onClick={buttonAction} >{buttonTitle}</button>\n          {showQuantity &&\n            <select>\n              <option value=\"1\" >1</option>\n            </select>\n          }\n        </ProductBox>\n\n      </Li>\n    </Box>\n  );\n}\n\nexport default Product;\n\n\nconst Box = styled.div`\nposition:relative;\n \n`;\n\nconst Li = styled.li`\nline-height: 35px;\nlist-style: none;\n`;\n\nconst ProductBox= styled.div`\ncolor:#000000\n`;","import React from 'react';\nimport styled from 'styled-components/macro';\nimport Product from './Product'\n\n\n\nfunction ProductList({products,showQuantity,buttonTitle,buttonAction}) {\n\n  const productOption = {                     //all product option props depend the type of the list if store or cart\n    buttonTitle: { buttonTitle },\n    buttonAction:{buttonAction},\n    quantity:{showQuantity}\n  }\n\n  return (\n    <Box>\n      <List>\n        <ul>\n          {\n            // products.map((product, indx) => {\n            //   return <Product key={indx}  productObj= {product} productOption={...productOption}/>\n            // })\n          }</ul>\n      </List>\n    </Box>\n  );\n}\n\nexport default ProductList;\n\n\nconst Box = styled.div`\nwidth:500px;\n   padding: 0.1rem;\n   height:650px;\n`;\nconst List = styled.div`\n    min-height:550px;\n    background-color: #fff;\n    margin-bottom:10px;\n`;\n","import React, { useState, createContext,useContext } from \"react\";\r\n\r\n\r\n\r\nconst Store = createContext();\r\nconst { Provider } = Store;\r\n\r\nconst useStore = () => {\r\n  const context = useContext(Store);\r\n  if (!context) {\r\n    throw new Error(`useStore must be used within a Provider`);\r\n  }\r\n  return context;\r\n};\r\n\r\n\r\nconst StoreProvider = ({ children }) => {\r\n \r\n  let [selectedVideo, setSelectedVideo] = useState(null);\r\n  let [videos, setvideos] = useState([]);\r\n\r\n\r\n\r\n\r\n  console.log(selectedVideo)\r\n  // useEffect(() => {\r\n   \r\n  // }, [all_robots]);\r\n\r\n\r\n     // state = values to display\r\n     const state = {\r\n      selectedVideo,videos\r\n    };\r\n    // actions = callbacks to invoke\r\n    const actions = {\r\n      setSelectedVideo,\r\n      setvideos\r\n    };\r\n\r\n    return <Provider value={{ ...state, ...actions }}>{children}</Provider>;\r\n}\r\n\r\nexport { StoreProvider, useStore };","import React from 'react';\nimport styled from 'styled-components/macro';\n//import Search from './Search';\nimport ProductList from './ProductList';\nimport { LIGHT_GREY, GREY } from \"../styles/colors\";\nimport GlobalStyles from \"../styles/global.style\";\nimport { useStore } from '../state/Products.store'\n\n\n\n\nconst App = () => {\n  const { videos, setvideos } = useStore();\n\n\n  const StoreProductFetch = async (query) => {\n    const products = {\n      q: query,\n      part: 'snippet',\n      type: 'video',\n      maxResults: 10,\n    }\n\n\n\n  }\n\n  return (\n    <Page>\n\n      <Header>{\n        // <SearchDiv> \n        //<Search videosQuery={videos} handleFormSubmit={handleFetch}/>\n        // </SearchDiv>\n      }\n      </Header>\n      <Content>\n        <StoreList>\n          <ProductList></ProductList>\n        </StoreList>\n        <CartList>\n          <ProductList>  </ProductList>\n        </CartList>\n      </Content>\n\n\n      <GlobalStyles />\n    </Page>\n  );\n}\n\nexport default App;\n\nconst Page = styled.div`\n\n  margin: 0px auto 0 auto;\n    width: 1200px;\n    height:800px;\n    background-color: gainsboro;\n`;\n\nconst Header = styled.div`\n    height:65px;\n   \n    padding: 5px;\n    display: flex;\n`;\nconst SearchDiv = styled.div`\n    width: 40%;\n  \n   display:flex\n   `;\nconst StoreList = styled.div`\n    width: 60%;\n    background: ${GREY};\n   display:flex\n   `;\nconst Content = styled.div`\n      display:flex\n   `;\nconst CartList = styled.div`\n   background: ${ LIGHT_GREY};\n    border-radius: 4px ;\n    padding: 32px;\n    padding-bottom: 24px;\n    width: 60%;\n    box-shadow: 0 16px 40px rgba(0,0,0,0.12);\n   `;\nconst ListBox = styled.div`\n    width: 40%;\n    background: ${ LIGHT_GREY};\n   display:flex\n   `;","export const GREY = \"#484848\";\r\nexport const MID_GREY = \"#767676\";\r\nexport const LIGHT_GREY = \"#e3e3e3\";\r\nexport const GREEN = \"#008489\";\r\nexport const RED = \"#ff5a5f\";\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/global.style.js';\nimport App from './view/App';\nimport { StoreProvider } from '../src/state/Products.store'\n\n\nReactDOM.render( <StoreProvider><App /></StoreProvider>, document.getElementById('root'));\n"],"sourceRoot":""}